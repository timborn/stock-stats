#!/usr/local/bin/python3
import os
import os.path as path
import time

CACHE = os.path.expanduser("~/.stock-stats-cache")
SYMBOL = "T"

# TODO: really need to gather stock symbol from command line
# TODO: add error handling when cmdline empty

# https://stackoverflow.com/questions/8258145/\
# in-python-check-if-file-modification-time-is-older-than-a-specific-datetime
def is_file_older_than_x_days(file, days=1): 
    file_time = path.getmtime(file) 
    # Check against 24 hours 
    return ((time.time() - file_time) / 3600 > 24*days)

# https://stackoverflow.com/questions/11210104/\
# check-if-a-program-exists-from-a-python-script
def is_tool(name):
    """Check whether `name` is on PATH and marked as executable."""

    # from whichcraft import which
    from shutil import which

    return which(name) is not None


# make sure we have the cache folder
# TODO: create if not there?
if not os.path.isdir( CACHE ) :
	os.mkdir( CACHE )

# do we have a file with the name of the symbol we are looking for?
FILE= CACHE + "/" + SYMBOL 
if os.path.exists( FILE ):

	# check the last modication time.  Is it less than a day old?
	if not is_file_older_than_x_days( FILE, 1):
		# return cached copy
		os.system("cat " + FILE)

# ELSE (all the stuff below gets folded together)
# ... if too old, fetch & cache (same as if file not found)
# ... if no file found, fetch data and cache a copy
else:
	# can we access related program?
	if is_tool("stock-stats-nocache"):
		os.system("stock-stats-nocache " + SYMBOL + ">" + FILE)
		os.system("cat " + FILE)
	else:
		print("ERROR: I need stock-stats-nocache on $PATH")
		exit(2)
