#!/usr/local/bin/python3
# 
# If you start getting errors that look like this:
# parse error: Invalid numeric literal 
# that appears to be caused by values in the returned JSON that look like "-"
# Not harmful, but annoying.
#
# Helpful Translations:
# "Earnings": "Oct 30 BMO",    <-- Before Market Opened

# TODO: when -nocache indicates unknown stock symbol, stop looping 

import os
import os.path as path
import time
import sys
import time

CACHE = os.path.expanduser("~/.stock-stats-cache")

if len(sys.argv) != 2 :
	print("USAGE: ", sys.argv[0], " <stockSymbol>")
	sys.exit(2)
SYMBOL = sys.argv[1]

# https://stackoverflow.com/questions/8258145/\
# in-python-check-if-file-modification-time-is-older-than-a-specific-datetime
def is_file_older_than_x_days(file, days=1): 
    file_time = path.getmtime(file) 
    # Check against 24 hours 
    return ((time.time() - file_time) / 3600 > 24*days)

# https://stackoverflow.com/questions/11210104/\
# check-if-a-program-exists-from-a-python-script
def is_tool(name):
    """Check whether `name` is on PATH and marked as executable."""

    # from whichcraft import which
    from shutil import which

    return which(name) is not None


##########
### MAIN 
##########

# make sure we have the cache folder
if not os.path.isdir( CACHE ) :
	os.mkdir( CACHE )

# do we have a file with the name of the symbol we are looking for?
# check the last modication time.  Is it less than a day old?
# if file size is zero, something screwy happened, so refresh cache
FILE= CACHE + "/" + SYMBOL 
if os.path.exists( FILE ) and not is_file_older_than_x_days( FILE, 1) and (os.path.getsize( FILE ) != 0) :

	# return cached copy
	os.system("cat " + FILE)

# ELSE (all the stuff below gets folded together)
# ... if too old, fetch & cache (same as if file not found)
# ... if no file found, fetch data and cache a copy
else:
	# can we access related program?
	if is_tool("stock-stats-nocache"):
		if ( os.system("stock-stats-nocache " + SYMBOL + ">" + FILE) == 0 ):
			os.system("cat " + FILE)
		else: 
			os.system("rm " + FILE)
			delay = 3
			while (delay < 15):
				time.sleep(delay)
				delay += 3
				if ( os.system("stock-stats-nocache " + SYMBOL + ">" + FILE) == 0 ):
					os.system("cat " + FILE)
					exit(0)
				else:
					os.system("rm " + FILE)

			print("ERROR: unable to obtain stock data for " + SYMBOL, file=sys.stderr)
			exit(4)
				
	else:
		print("ERROR: I need stock-stats-nocache on $PATH", file=sys.stderr)
		exit(3)
